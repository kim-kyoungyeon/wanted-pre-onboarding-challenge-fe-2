{"ast":null,"code":"import { atom, selector } from \"recoil\";\nexport let Categories;\n\n(function (Categories) {\n  Categories[\"TO_DO\"] = \"TO_DO\";\n  Categories[\"DOING\"] = \"DOING\";\n  Categories[\"DONE\"] = \"DONE\";\n})(Categories || (Categories = {}));\n\nexport const categoryState = atom({\n  key: \"category\",\n  default: Categories.TO_DO\n});\nexport const customCategoriesState = atom({\n  key: \"customeCategoreis\",\n  default: JSON.parse(localStorage.getItem(\"CATEGORIES_KEY\") || \"[]\")\n});\nexport const toDoState = atom({\n  key: \"toDoList\",\n  default: JSON.parse(localStorage.getItem(\"toDos\") || \"[]\")\n});\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: _ref => {\n    let {\n      get\n    } = _ref;\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    return toDos.filter(toDo => toDo.category === category);\n  }\n});","map":{"version":3,"names":["atom","selector","Categories","categoryState","key","default","TO_DO","customCategoriesState","JSON","parse","localStorage","getItem","toDoState","toDoSelector","get","toDos","category","filter","toDo"],"sources":["C:/Users/ghks2/Desktop/스파르타2022/newapp/src/components/atoms.tsx"],"sourcesContent":["import { atom, selector } from \"recoil\";\r\nexport enum Categories {\r\n  \"TO_DO\" = \"TO_DO\",\r\n  \"DOING\" = \"DOING\",\r\n  \"DONE\" = \"DONE\",\r\n}\r\nexport interface IToDo {\r\n  text: string;\r\n  id: number;\r\n  category: Categories;\r\n}\r\n\r\nexport const categoryState = atom<Categories>({\r\n  key: \"category\",\r\n  default: Categories.TO_DO,\r\n});\r\n\r\nexport const customCategoriesState = atom<string[]>({\r\n  key: \"customeCategoreis\",\r\n  default: JSON.parse(localStorage.getItem(\"CATEGORIES_KEY\") || \"[]\"),\r\n});\r\n\r\nexport const toDoState = atom<IToDo[]>({\r\n  key: \"toDoList\",\r\n  default: JSON.parse(localStorage.getItem(\"toDos\") || \"[]\"),\r\n});\r\n\r\nexport const toDoSelector = selector({\r\n  key: \"toDoSelector\",\r\n  get: ({ get }) => {\r\n    const toDos = get(toDoState);\r\n    const category = get(categoryState);\r\n    return toDos.filter((toDo: any) => toDo.category === category);\r\n  },\r\n});\r\n"],"mappings":"AAAA,SAASA,IAAT,EAAeC,QAAf,QAA+B,QAA/B;AACA,WAAYC,UAAZ;;WAAYA,U;EAAAA,U;EAAAA,U;EAAAA,U;GAAAA,U,KAAAA,U;;AAWZ,OAAO,MAAMC,aAAa,GAAGH,IAAI,CAAa;EAC5CI,GAAG,EAAE,UADuC;EAE5CC,OAAO,EAAEH,UAAU,CAACI;AAFwB,CAAb,CAA1B;AAKP,OAAO,MAAMC,qBAAqB,GAAGP,IAAI,CAAW;EAClDI,GAAG,EAAE,mBAD6C;EAElDC,OAAO,EAAEG,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,gBAArB,KAA0C,IAArD;AAFyC,CAAX,CAAlC;AAKP,OAAO,MAAMC,SAAS,GAAGZ,IAAI,CAAU;EACrCI,GAAG,EAAE,UADgC;EAErCC,OAAO,EAAEG,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,IAA5C;AAF4B,CAAV,CAAtB;AAKP,OAAO,MAAME,YAAY,GAAGZ,QAAQ,CAAC;EACnCG,GAAG,EAAE,cAD8B;EAEnCU,GAAG,EAAE,QAAa;IAAA,IAAZ;MAAEA;IAAF,CAAY;IAChB,MAAMC,KAAK,GAAGD,GAAG,CAACF,SAAD,CAAjB;IACA,MAAMI,QAAQ,GAAGF,GAAG,CAACX,aAAD,CAApB;IACA,OAAOY,KAAK,CAACE,MAAN,CAAcC,IAAD,IAAeA,IAAI,CAACF,QAAL,KAAkBA,QAA9C,CAAP;EACD;AANkC,CAAD,CAA7B"},"metadata":{},"sourceType":"module"}